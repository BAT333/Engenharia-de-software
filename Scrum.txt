------------------------------------------------------------Pilares e valores do Scrum
1- Transparência

Esse pilar define que todas as informações relevantes que envolvem o projeto estejam acessíveis para todos os profissionais responsáveis pela entrega de resultados.

Isso significa que essas pessoas devem saber o que é esperado em relação à solução que está sendo desenvolvida, além de tudo o que for importante para aplicação dessa solução.

A transparência ocorre principalmente por meio da comunicação, algo extremamente importante para o Scrum. A comunicação pode acontecer de forma verbal ou não verbal, geralmente em reuniões do time e apresentações de resultados.

2- Inspeção

Esse pilar prega que toda e qualquer questão relacionada ao projeto deve ser verificada periodicamente. Essa ação contribui para que possíveis problemas ou situações diversas sejam identificadas e solucionadas a tempo.

Se o time está atento ao que está acontecendo é possível propor melhorias durante o próprio processo de desenvolvimento ao invés de esperar o produto ou serviço ficar pronto.

Um exemplo de inspeção no Scrum é a reunião de retrospectiva na qual os profissionais se reúnem para avaliar o processo de trabalho. Nesse encontro é possível discutir o que foi positivo e negativo na sprint anterior.

A partir desse diálogo, é possível melhorar o processo de trabalho na sprint seguinte, tornando o desenvolvimento da solução mais efetivo e assertivo.

3- Adaptação

A adaptação está diretamente relacionada ao pilar anterior. Quando o time realiza a inspeção geralmente surgem adaptações que precisam ser aplicadas. Isso ocorre não só no processo de trabalho do time, como na própria solução que está sendo desenvolvida.

Um exemplo no qual é levantado possíveis adaptações é na reunião de retrospectiva.

Framework
Além desses pilares que servem com base para a aplicação do Scrum, o Framework também tem seu próprio conjunto de valores que deve ser seguido pelos membros do time

1- Compromisso

O primeiro valor é o compromisso. Isso, porque cada membro do time deve sempre se comprometer a seguir as regras do Framework e atender os objetivos planejados no início do projeto.

Além disso, é preciso que as pessoas envolvidas estejam comprometidas a melhorar seu próprio processo de trabalho para serem mais efetivos como time.

2- Foco

Esse valor prega que os membros do time atuem em pequenos ciclos de trabalho por um tempo pré-determinado. Isso ajuda a manter o foco nas tarefas listadas no ciclo no qual o profissional se encontra.

É preciso entender que no Scrum não é recomendado ser uma pessoa multitarefas. O ideal é sempre trabalhar em uma etapa por vez, focando toda energia e disposição para resolver determinado problema.

Fazendo isso é possível ter mais produtividade e concentração para entregar o melhor resultado possível em cada ciclo de trabalho.

3- Abertura

Para que o time possa trabalhar de forma interativa, é preciso que todos estejam abertos a novos aprendizados. Também preciso de flexibilidade para encarar diferentes mudanças e desafios que normalmente acontecem no projeto.

Lembre-se que no Scrum nada é estático. Sendo assim, é essencial que o time esteja disposto a receber feedbacks, seja de outras pessoas do time ou stakeholders.

Essa atitude é fundamental para que toda equipe consiga trabalhar de forma coerente, além de estar sempre em busca da melhor solução para o projeto.

4- Respeito

Por ser um processo inteiramente colaborativo, no Scrum todas as pessoas devem considerar as diferentes percepções e opiniões dos outros membros, respeitando-as. Todas as decisões técnicas definidas durante o projeto devem ser respeitadas por todos.

5- Coragem

A coragem significa que os profissionais devem aceitar desafios, ou seja, trabalhar e se dedicar na resolução de problemas diversos. Quando necessário, também é preciso expor para o time o que está acontecendo de errado.

Esse pilar também significa que as pessoas precisam ter coragem para aceitar as falhas, afinal elas acontecem e isso é normal. É preciso aprender com os erros para poder evoluir no projeto.

No próximo vídeo aprenderemos mais sobre o Framework, seu passo a passo e o fluxo de processo.





-----------------------------------------------------------------------------------Scrum framework
Valores
Os valores são responsáveis por guiar todo processo de decisão ao longo do projeto, por isso, são muito importantes.

Funções
Se referem ao ato de delimitar quais pessoas vão desempenhar determinados papeis no processo de projeto.

Interações
Além disso, também é preciso que durante todo esse processo os profissionais tenham interações. Isso irá fazer com que o time consiga entregar um produto, serviço ou solução na melhor qualidade e menor tempo possível.

O Framework possui alguns elementos-chave, sendo eles os:

Papéis;
Artefatos;
Eventos.
Cada um desses componentes são essenciais para garantir o sucesso do seu projeto.

Papéis
Os papéis se referem a ocupação que cada membro deve ter no projeto. O Scrum delimita três papéis fundamentais, sendo eles:

Scrum Master;
Product Owner;
Development Team.

Usamos as nomenclaturas em inglês, pois nesse curso estamos usando como base o Srum Guide. No Brasil, o Product Owner é geralmente chamado de PO ou dono do produto. O time de desenvolvimento pode ser chamado de devs ou developers.

Artefatos
O segundo elemento do Scrum são os artefatos, ou seja, as informações essenciais para o andamento correto do projeto. É a partir disso que toda equipe consegue orientar seu trabalho, ou seja, saber o que está acontecendo e o que deve ser entregue.

Lembra do pilar chamado transparência? Ele está diretamente relacionado aos artefatos, afinal, quanto mais informação acessível o time tiver, maior será a efetividade do trabalho.

Alguns artefatos fundamentais são:

Product backlog;
Sprint backlon;
Incrementos.

Eventos
Os eventos são encontros fixos que o time tem ao longo do desenvolvimento do projeto. São momentos de interação planejados e essenciais, pois possuem uma data e horário fixo, justamente para otimizar a agenda e evitar que o foco seja perdido.

Cada evento é uma oportunidade para colocar em prática outro pilar do Scrum, a inspeção.

Lembrando que a inspeção é quando analisamos o que está sendo feito. Fazer isso nas reuniões é muito positivo para toda equipe.

O Scrum Guide define cinco diferentes eventos oficiais:

Sprint planning;
Sprint, Daily Scrum;
Sprint review.;
Sprint Retrospective.
No Brasil a Sprint review pode ser chamada de reunião de revisão, assim como a Sprint Retrospective de reunião de retrospectiva.

Nas próximas aulas aprenderemos de forma detalhada cada um desses elementos.

https://www.scrum.org/
https://www.scrumalliance.org/
https://scrumguides.org/index.html
------------------------------------------------------------------Product Owner
Product Owner (PO)
Iremos começar pelo papel de Product Owner (PO), conhecido como dono do produto.
Nessas situações, a pessoa atendente é responsável por anotar o pedido e transmiti-lo à pessoa responsável pela liderança

Stakeholders
Ressaltando que o Product Owner (PO) é um indivíduo, não uma equipe. No entanto, essa pessoa pode representar
as necessidades de diferentes stakeholders, ou seja, de diversas partes interessadas envolvidas no projeto.

Responsabilidades da pessoa Product Owner
Ao nos referirmos a rotina de uma pessoa Product Owner, temos algumas responsabilidades principais:

Definir requisitos do produto
Alinhar as entregas do time
Gerenciar e atualizar product backlog
iniciar e/ou cancelar uma Sprint

A função do Product Owner é definir todos os requisitos do produto ou solução em desenvolvimento. 
Além disso, ele deve alinhar as ideias da equipe Scrum, preferencialmente por meio de um cronograma 
que contenha as principais atividades e as pessoas responsáveis por elas.

O Product Owner também é responsável por gerenciar e atualizar o product backlog, 
que deve ser acessível a todos os membros da equipe para garantir que todos saibam 
o que é esperado do projeto. Por fim, o Product Owner é responsável por iniciar e 
cancelar sprints, quando necessário. Essa tarefa é exclusiva do profissional que desempenha a função de Product Owner.
-------------------------------------------------------------------Scrum Master




Teoria e prática Scrum
Segundo o Scrum Guide, a pessoa que assume o papel de Scrum Master é responsável por garantir que não apenas a equipe Scrum, mas também a organização ou empresa em que o projeto está sendo realizado, compreendam tanto a teoria quanto a prática do Scrum.

Quando falamos da teoria do Scrum, estamos nos referindo aos valores e pilares que fundamentam a aplicação dessa metodologia. Por outro lado, a prática envolve os eventos, artefatos, processos e etapas que fazem parte do framework Scrum.

Isso acontece porque o Scrum Master é responsável pela eficácia da equipe Scrum, ou seja, garantir que todos os membros possam aplicar corretamente o processo Scrum.

Vale ressaltar que o Scrum Master não atua como um fiscal de processos no projeto, nem assume as funções dos membros da equipe que não estão desempenhando suas respectivas tarefas. Pelo contrário, é a pessoa que ao exercer a função se torna menos necessária possível ao longo do projeto.

O que isso significa?

O Scrum Master deve:
Aumentar a autonomia do time Scrum
Ter um conhecimento técnico sobre Scrum
Entender e saber lidar com pessoas
A pessoa encarregada de desempenhar o papel precisa conceder autonomia à equipe Scrum, capacitando os membros no uso da ferramenta. Isso implica em ensinar como aplicar o Scrum e como adotar uma mentalidade alinhada com os princípios do Scrum. Assim, os membros do time consequem de autogerenciar e executar suas funções sem uma grande necessidade de interferência do Scrum Master.

Para exercer essa função, a pessoa Scrum Master deve possuir um amplo conhecimento técnico sobre o Scrum, como mencionado anteriormente. Além desse conhecimento técnico, o Scrum Master deve possuir competências e habilidades comportamentais necessárias para desempenhar o papel, incluindo habilidades de lidar com pessoas.

Essa responsabilidade recai sobre a pessoa Scrum Master, pois ela atua como uma observadora dentro da equipe durante todo o projeto. Ela é capaz de identificar quando surge um problema e um membro da equipe não o relata. Nesses momentos, a pessoa Scrum Master precisa intervir e abordar a situação, seja ao se impor diretamente ou ao chamar o membro da equipe para uma conversa.

Por estar em constante contato com as pessoas, a pessoa Scrum Master precisa possuir habilidades de comunicação e facilitação de eventos e reuniões. Essas habilidades são essenciais para garantir uma comunicação efetiva dentro da equipe e facilitar a realização de eventos e reuniões relacionados ao Scrum.

Scrum Master e Gerente de projetos
Imagem comparativa entre Scrum Master e Gerente de Projetos. À esquerda, há um retângulo laranja com o texto "Scrum Master" em branco. Uma seta aponta para a direita, indicando o texto "Gerente de projeto". Abaixo dele, uma seta aponta para baixo, direcionando o texto "Orienta e gerencia o time para atingir os objetivos do projeto".
Em uma linguagem mais voltada para o ambiente de negócios, pode-se dizer que o Scrum Master desempenha um papel semelhante ao de um gerente de projetos. Isso porque a pessoa Scrum Master deve orientar e gerenciar a equipe para atingir os objetivos do projeto.

Além das competências mencionadas anteriormente, é fundamental que aqueles que desejam gerenciar outras pessoas conheçam a empresa em que o projeto está ocorrendo e seus colegas. Isso ocorre porque esses indivíduos precisarão constantemente elevar a equipe, promovendo uma comunicação mais aberta e reduzindo as barreiras, com o objetivo comum de entregar uma solução específica em um determinado projeto.

Conforme mencionado anteriormente, o conceito de equipe no Scrum é fundamental. Portanto, o papel do Scrum Master é crucial para garantir a integração contínua das pessoas, promovendo um trabalho mais unido.

Responsabilidade da pessoa Scrum Master
e forma geral, podemos dizer que a principal responsabilidade de uma pessoa Scrum Master são:

Garantir os valores, práticas e regras do Scrum
Remover barreiras
Dar feedbacks
Garantir a produtividade do time (eficácia no Scrum Guide)
Organizar e facilitar eventos Scrum
O Scrum Master tem a responsabilidade de assegurar que a equipe esteja alinhada com os valores e princípios do Scrum, bem como seguir as práticas e regras estabelecidas pelo framework. Também atua como um pessoa facilitadora, identificando e removendo quaisquer obstáculos ou impedimentos que possam atrapalhar o progresso da equipe, seja em relação a recursos, comunicação ou qualquer outro aspecto.

Além disso, desempenha um papel crucial no fornecimento de feedbacks, tanto positivos quanto negativos. Isso ajuda a equipe a melhorar seu desempenho, reconhecendo o bom trabalho realizado e fornecendo orientação construtiva quando necessário.

Também trabalha para garantir a eficácia do time, seguindo as diretrizes estabelecidas pelo Scrum Guide. Isso envolve auxiliar a equipe a cumprir os objetivos do projeto dentro dos prazos estabelecidos, mantendo um fluxo de trabalho consistente e focado.

Por fim, a pessoa Scrum Master é responsável por organizar e facilitar os eventos do Scrum, como reuniões diárias, planejamentos, revisões e retrospectivas. Esses eventos são essenciais para manter a transparência, a colaboração e o progresso do projeto.

Outro ponto importante para deixarmos claro é que a pessoa Scrum Master apenas orienta e facilita o processo Scrum, não tomando as decisões.Como visto na aula passada, isso é responsabilidade do Product Owner.

O envolvimento de uma pessoa Scrum Master com a equipe ocorre tanto durante os eventos, como sprint planning ou review, quanto no dia a dia do time. Ela realiza uma leitura constante para identificar quando é necessário intervir ou quando sua ajuda é solicitada para fornecer orientação.

Agora que já entendemos sobre o Scrum Master, vamos compreender as atribuições de um time de pessoas desenvolvedoras.
---------------------------------------------------------------------------------Development Team

O Papel das Pessoas Desenvolvedoras no Time Scrum
Fluxo com as habilidades necessárias para um time de pessoas desenvolvedoras. No topo, há um retângulo laranja com o texto "Development Team". Abaixo dele, existem três setas que indicam as seguintes habilidades: "Proatividade", "Colaboração" e "Autogerenciamento".
Quando cada membro do time possui clareza sobre sua contribuição no projeto, as entregas se tornam mais eficientes e ágeis. Além disso, é essencial que as pessoas desenvolvedoras sejam proativas e capazes de se autogerenciar, compreendendo como e quando executar cada tarefa, sem depender exclusivamente das lideranças do time Scrum.

Um perfil colaborativo é altamente desejável para uma pessoa desenvolvedora, pois as interações e conversas constantes são essenciais durante o desenvolvimento do projeto. Nas aulas anteriores, mencionamos a importância da Daily Scrum, que consiste em reuniões diárias para acompanhar o progresso do projeto.

Além disso, existem outras reuniões de projeto nas quais os membros do time de desenvolvimento precisam participar. Nessas ocasiões, a colaboração efetiva se torna fundamental para garantir uma comunicação clara e alinhada entre os membros da equipe.

Imagem com a responsabilidade do time de pessoas desenvolvedoras. À esquerda, há um retângulo laranja com o texto "Development Team" em branco. Uma seta aponta para a direita, indicando o texto "Faz o produto". Abaixo dele, uma seta aponta para baixo, direcionando o texto "Guiado pelo Product Owner, a cada Sprint, entrega parte da solução".
Resumidamente, o time de pessoas desenvolvedoras tem a responsabilidade de criar o produto com base nas orientações do Product Owner. Ou seja, o Product Owner prioriza determinadas tarefas que serão repassadas ao time para desenvolvimento. A cada sprint, o time entrega um incremento de produto, que consiste em uma parte da solução desenvolvida para obter feedback.

Scrum Team e Development Team
Há algumas diferenças entre o time Scrum e o time de pessoas desenvolvedoras.

A diferença central reside no fato de que o time Scrum engloba todas as pessoas envolvidas em um determinado projeto, como o Product Owner, Scrum Master e outros stakeholders. Por outro lado, o time de desenvolvimento refere-se especificamente às pessoas responsáveis por criar a solução em si. No caso de um projeto de software, seriam as pessoas desenvolvedoras, engenheiras e outros profissionais envolvidos nessa tarefa.

Normalmente, um time de pessoas desenvolvedoras é composto por cerca de 10 membros, embora isso possa variar. No entanto, é essencial que a equipe não seja muito grande, para facilitar a comunicação e a colaboração entre os seus membros. Manter um tamanho adequado permite que o trabalho flua de maneira mais eficiente e coesa dentro do time.

Responsabilidades do time de pessoas desenvolvedoras
Elaborar um plano para a Sprint (Sprint Backlog)
Determinar tecnicamente um incremento
Coordenar e executar seu próprio trabalho
Garantir a melhoria contínua do produto
Informar impedimentos
As responsabilidades desse time são elaborar um plano para as sprints, determinar tecnicamente um incremento de produto, isto é, definir o que deve ser entregue em cada sprint como parte do produto em desenvolvimento. Além disso, precisa coordenar e executar o próprio trabalho, o que está relacionado ao autogerenciamento.

São responsáveis também por garantir a melhoria contínua do produto. Isso significa que devem buscar constantemente maneiras de aprimorar a solução, identificar oportunidades de otimização e implementar melhorias de forma iterativa a cada sprint.

Além disso, o time de pessoas desenvolvedoras também tem a responsabilidade de informar impedimentos. Eles devem ser proativos ao identificar e comunicar quaisquer obstáculos ou dificuldades que possam estar impactando o progresso do projeto, para que essas questões possam ser resolvidas de forma ágil e eficaz.

Um exemplo disso ocorre quando um membro do time não consegue entregar as demandas dentro do prazo estabelecido, o que pode resultar em atrasos no projeto. Nesse caso, é essencial que haja transparência, e a pessoa deve comunicar aos colegas de equipe e, principalmente, ao Scrum Master, que é responsável por garantir a aplicação do Scrum.

Essa comunicação permite que o time tome conhecimento dos impedimentos e possa encontrar soluções em conjunto, promovendo a colaboração e o apoio mútuo. Além disso, a responsabilidade de informar os impedimentos recai também sobre o Scrum Master, que pode auxiliar na remoção de barreiras e na busca por alternativas para manter o projeto dentro dos prazos estabelecidos.

Dessa forma, a melhoria contínua do produto e o cumprimento dos objetivos do projeto são assegurados através da identificação e solução proativa de possíveis impedimentos.

O principal propósito de um time de pessoas desenvolvedoras é solucionar problemas de usuários ou clientes. Portanto, é de responsabilidade do time obter feedback sobre o incremento do produto a cada sprint por parte dos usuários.

Esse feedback é essencial para compreender se as necessidades estão sendo atendidas de forma satisfatória e identificar possíveis melhorias ou ajustes a serem realizados. Em outras palavras, agregar mais valor à solução em desenvolvimento. Também auxilia o time na análise do processo de trabalho, entendendo o que pode ser melhorado nas etapas do Scrum.

Frase retirada do livro "Scrum: Gestão Ágil para Projetos de Sucesso"

Os desenvolvedores mais efetivos são aqueles que se envolvem e se engajam integralmente. Desde o entendimento dos problemas a serem resolvidos até a definição, a implementação e a validação de soluções, trabalhando lado a lado com Product Owner, clientes, usuários e demais partes interessadas durante todo o processo.

Rafael Sabbagh
-------------------------------------------------------------------Product Backlog


Conteúdo do Product Backlog
O conteúdo desse artefato vai depender do tipo de projeto e contexto que a solução se encaixa.

Ao longo das últimas décadas, o Scrum saiu do escopo da área da tecnologia e atualmente é utilizado em diferentes contextos e empresas que desenvolvem diferentes tipos de produtos. Portanto, não existe uma única regra de que tipo de item deve conter um Product Backlog.

Embora não exista essa regra, podemos dizer que o conteúdo de um Product Backlog deve conter de forma geral:

Necessidades/Desejos das pessoas usuárias da solução desenvolvida;
Objetivos do negócio e das principais partes interessadas (stakeholders) do projeto;
Limitações do projeto;
Recursos e funcionalidades;
Melhorias e/ou correções;
Detalhes do tipo de produto/solução.
As limitações do projeto costumam ser esquecidas nesse tipo de artefato, mas são muito importantes.

Por exemplo, desenvolver produtos físicos ou digitais vai ocasionar um custo. Porém, não adianta desenvolver um produto que vai custar muito mais do que vale. Consequentemente, um dos itens do Product Backlog desse produto deve ser o teto de gastos. Ou seja, quanto o produto tem que custar para a empresa o desenvolver e qual seu valor máximo no ponto de venda.

Outros aspectos que o Product Backlog pode conter são os recursos e funcionalidades. Principalmente, quando falamos de produtos digitais como aplicativos ou sistemas na nuvem.

Dependo do contexto, podem aparecer melhorias ou correções. Por exemplo, quando uma empresa não desenvolve um produto do zero. Na verdade, está reformulando um produto que já existe em seu portfólio. Nesse caso, o Product Backlog desse novo projeto, pode conter as melhorias que esse novo produto deve ter em relação ao antigo.

Ainda que criemos um produto do zero, podemos ter melhorias e correções em relação ao produto da concorrência.

Por fim, o Product Backlog pode conter qualquer tipo de informação essencial para o projeto acontecer de acordo com seu contexto.

De qualquer forma, o Product Backlog é sempre mantido e priorizado pelo papel de Product Owner (PO), a pessoa que representa a pessoa usuária ou clientela junto ao time e a empresa.

Meta do produto
Qualquer tipo de solução é iniciada para resolver um problema ou para atender alguma demanda do mercado como um todo. Esse objetivo específico a ser atendido é o que chamamos no Scrum de meta do produto.

Em resumo, a meta do produto é uma descrição clara do objetivo geral que aquele produto deve cumprir.

Por isso, deve estar nítido para todo o time, já que a meta do produto vai guiar todo o trabalhado das pessoas que desenvolvem essa solução.

A meta do produto vem sempre do Product Owner que a define a partir de suas pesquisas de mercado, conversas com stakeholders e pessoas de negócio, além de conversas com as pessoas usuárias e a clientela do projeto.

A partir disso, essa meta é comunicada para o time Scrum, que começa a trabalhar ao longo das Sprints para poder atingir o objetivo geral do produto.

Como criar um Product Backlog eficiente?
Talvez você se pergunte: mas, como criar um Product Backlog eficiente? Para que isso aconteça você deve seguir algumas etapas-chave.

1. Focar na pessoa usuária/cliente
A primeira etapa é focar na pessoa usuária ou cliente. O que isso quer dizer? Significa que devemos priorizar e entender o que essa pessoa demanda.

No caso de aplicativos, quais são as funcionalidades? Quais detalhes importantes que essa pessoa quer no aplicativo? O que faria diferença para ela comprar o produto se tivesse naquele aplicativo?

Ter esse foco inicial na pessoa usuária vai fazer com que consigamos colocar no Product Backlog itens que realmente vão fazer com que aquele produto realmente atenda as expectativas e desejos da pessoa interessada no final.

2. Priorizar itens do backlog
Quando já temos as informações do que é importante para a pessoa usuária, precisamos priorizar esses itens no backlog de produtos. Ou seja, temos que selecionar em uma escala de valor o que é mais importante para a clientela em relação àquela solução.

Por exemplo, tudo que for mais importante deve estar no topo da lista. Consequentemente, deve ser desenvolvido primeiro ao longo do projeto. Enquanto o que for menos importante, vai ficar na parte de baixo da lista.

Isso também vale para alguns itens que são urgentes de serem feitos no início do projeto. Às vezes não vai ser algo tão importante para a clientela, porém, faz mais sentido desenvolver aquele item no início para realizar testes e afins. Isso fica a critério da equipe.

3. Atualizar o backlog
Depois, é bem importante que o PO sempre atualize o backlog de produto.

No Scrum, nada é estático. Logo, as mudanças podem e são esperadas que aconteçam durante o processo.

Por exemplo, lembrar de alguma demanda da clientela que não foi identificada no início. Ou alguém da equipe comentar um detalhe que poderia ser adicionado ao projeto.

Essa revisão é essencial para sempre saber o que faz ou não sentido e o que pode ser alterado.

4. Ter clareza e objetividade
Como falamos anteriormente, é fundamental que o Product Backlog tenha clareza e objetividade. Por isso, ao escrever essa lista, os aspectos que os produtos precisam ser possíveis de serem executados.

Em outras palavras, cada integrante da equipe precisa conferir a lista e entender de fato o que precisa ser feito.

Outro aspecto importante em relação à clareza é manter o Product Backlog sempre visível e acessível para todas as pessoas do time. Ou seja, todas precisam ter acesso à lista para estar alinhadas com seu trabalho e entender o que precisa ser entregue naquela Sprint ou no projeto como um todo.

Atualmente, a tecnologia nos ajuda bastante a ter um Product Backlog sempre acessível e visível. Alguns aplicativos como Miro, Notion ou Trello são ferramentas que possuem versões gratuitas e que você pode utilizar no seu processo de projeto.

5. Incluir o time de desenvolvimento
Além disso, é fundamental incluir o time de desenvolvimento na hora de montar o Product Backlog. Algo que nem sempre acontece na prática. Principalmente, quando trabalhamos em uma solução extremamente específica, nichada ou que envolve pessoas técnicas para construí-la.

Por vezes, a clientela não vai saber te dizer exatamente o que precisa ter naquela solução ou caso isso também não seja apontado nas suas pesquisas de mercado.

Nada melhor do que ter especialistas e pessoas que realmente saibam desenvolver para poder opinar sobre a lista.

Dica: se possível sempre inclua integrantes do time de desenvolvimento ao elaborar o seu Product Backlog. Com isso, sugestões e limitações de projetos podem ser discutidas nesse momento e fazer com que o Product Backlog seja eficiente.

6. Revisar o backlog
Por fim, sempre revise o Product Backlog de forma regular durante o processo de projeto. Isso vai fazer com que você consiga identificar se o time realmente prioriza o necessário, se está alinhado e conseguindo cumprir com a meta do produto.

Ao seguir todos esses passos, você vai conseguir desenvolver um Product Backlog realmente eficiente e que ajude a equipe Scrum a trabalhar de forma mais focada.


https://medium.com/empiricustech/5-t%C3%A9cnicas-de-prioriza%C3%A7%C3%A3o-organize-seu-backlog-e636d97222e4

-------------------------------------------------------------------------------Sprint Planning



Nesse momento, o time de reúne para conversar e definir qual trabalho vai ser feito na Sprint que vai ser iniciada.

O propósito desse evento é definir:

O que será entregue: o objetivo da Sprint;
Como será entregue: plano de trabalho para atingir o objetivo.
Tudo isso é definido pelo Product Owner em conjunto com o restante da equipe Scrum.

Basicamente, uma Sprint Planning é divida em dois momentos diferentes. O primeiro momento serve para a equipe discutir e definir qual vai ser o objetivo da Sprint que vai ser iniciada. Ou seja, o que deve ser entregue e quais são as principais atividades que devem acontecer para que a entrega seja possível.

O segundo momento do evento, o time Scrum e o PO analisam o objetivo definido do passo anterior e constroem um plano para detalhar tudo que deve ser feito para atingir o objetivo.

Em outras palavras, é necessário desdobrar as atividades em pequenas tarefas e indicar quem são as pessoas responsáveis por cumpriá-las, além de estabelecer um prazo para seu cumprimento. Esse é o plano de ação da Sprint Planning.

Como realizar uma Sprint Planning?
Mas, você ainda deve estar com dúvidas sobre como realizar esse evento. Para isso, você precisa realizar algumas etapas.

Time box
O primeiro que você deve fazer para começar uma Sprint Planning é definir o time box, isto é, a janela de tempo que esse evento Scrum vai ter de duração.

O Scrum Guide nos orienta que quando uma Sprint tem uma duração de um mês, o evento deve ter até oito horas de duração.

Mas, se uma Sprint vai ter uma ou duas semanas, a reunião tem que durar menos tempo. Não existe uma regra, vai depender do tipo e contexto do projeto.

Preparação
A segunda etapa é ter um momento de preparação. Ou seja, o Product Owner em específico deve se preparar para começar a reunião com o Product Backlog em mãos.

Com isso, pode discutir essa lista com a equipe para entender quais são as principais prioridades e, por sua vez, pode gerar o objetivo da Sprint.

Objetivo
O objetivo é uma declaração do que deve ser entregue na Sprint em questão.

É nesse momento que o Product Owner deve apresentar o objetivo na equipe e discutir o porquê da importância de atingir o objetivo - não só para a pessoa usuária final da solução, mas também para o próprio negócio. Afinal, essa pessoa é quem faz a conexão entre cliente, time e stakeholders do negócio.

A partir dessa conversa, o time Scrum deve aproveitar o momento para tirar dúvidas sobre o objetivo e dar sugestões. Por exemplo, viabilidade e adição de detalhes.

Sprint Backlog
Após a definição do objetivo da Sprint, a equipe vai pegar a lista do Product Backlog e analisar quais daqueles itens devem ser colocados em prática durante a Sprint em questão.

A escolha desses itens está extremamente relacionada ao objeto da Sprint, ou seja, vamos analisar o objeto definido e conferir a lista de requisitos, funcionalidades e demandas para determinar quais auxiliam o atingimento do objetivo atual da Sprint.

Todas essas definições resultam no que chamamos de Sprint Backlog que é um material bem detalhado e que serve de orientação para a equipe de desenvolvimento conseguir inspecionar o trabalho do time a cada Daily Scrum. Desse modo, conseguimos saber o que está ou não sendo feito, onde existe alguma dificuldade durante os eventos diários.

Meta da Sprint
A partir disso, o time vai elaborar o que chamamos de meta da Sprint, uma declaração objetiva e concisa do que deve ser atingido nessa Sprint em questão.

Diferentemente do Sprint Backlog que é algo bem detalhado e voltado para tarefas e responsabilidades, a meta de Sprint vai unir o time para saber o que precisa ser atingido ao final da Sprint. Consequentemente, vai conseguir trabalhar mais alinhado para atingir esse meta.

Ter um espírito de time e coletivo é bastante importante no Scrum.

Afinal, quando temos uma meta para cumprir, procuramos dar nosso melhor para atingi-la. Quando trabalhamos nessa meta com outras pessoas, o nosso trabalho, consequentemente, passa a ser mais colaborativo e eficiente, porque todos têm um interesse em comum.

Plano de ação
Por fim, uma Sprint Planning é finalizada com o documento chamado plano de ação. Esse plano precisa pegar tudo o que foi definido até então e detalhar tarefas, responsabilidades e prazos de entrega.

Por exemplo, "a tarefa 1 deve ser desenvolvido por integrante X. Essa pessoa tem prazo X para fazer essa entrega. Nessa entrega, a pessoa deve considerar A, B e C".

O nível de detalhamento do plano serve para orientar o trabalho do time de desenvolvimento de uma maneira bem técnica. Além de fazer com que todos entendam os objetivos que precisam ser atingidos a partir desse plano.

O que aprendemos?
Ao final da Sprint Planning, todo o time de Scrum deve estar comprometido com o objetivo da Sprint e também com o plano de ação. O comprometimento é um dos valores do Scrum.

Além disso, ao final da reunião, cada integrante do time deve estar ciente do que é esperado dele, ou seja, qual trabalho que deve executar e a forma de fazê-lo.

Tudo isso, facilita o processo de desenvolvimento de uma solução. Afinal, quando sabemos exatamente o que é esperado e quais são as tarefas que precisam ser feitas para atingir o objetivo, fica mais fácil direcionar o foco para aquela atividade. Além de agilidade, isso também traz eficiência durante o processo de projeto.




----------------------------------------------------------------------------------------------Sprints


O que é Sprint?
Imagine a seguinte situação: você deseja elaborar um determinado prato. Mas, para isso, o primeiro que você deve fazer é ler a receita para entender quais são as principais tarefas a serem executadas, qual a ordem da tarefa e quais são os principais ingredientes e suas respectivas quantidades.

Só depois de entender todo o passo a passo, você vai ser capaz de colocar a mão na massa e elaborar o prato. Ao parar e ler a receita para adquirir esse conhecimento, você vai diminuir consideravelmente as chances de errar o prato. Desse modo, vai conseguir atingir seu objetivo inicial de elaborar a receita.

Em projetos que utilizam o Scrum, a lógica é a mesma. Ou seja, o time de desenvolvimento durante as Sprints sempre deve se atentar ao Sprint Backlog, assim como ao plano de ação meticulosamente detalhado para auxiliar no desenvolvimento do produto.

Caso o time não faça isso, a chance de não atingir a meta da Sprint é grande. Logo, é importante entender o conceito de Sprint e saber vivenciar esse evento se você deseja aplicar o framework Scrum em seus projetos.

Uma Sprint é um evento com uma duração fixa. O Scrum Guide nos orienta que as Sprints devem durar entre 2 e 4 semanas.

Mas, não existe uma regra já que depende novamente do tipo e contexto do projeto. O ideal é que as Sprints tenham um tempo curto, porque ajuda o time a trabalhar de forma mais organizada, focada e eficiente.

Além disso, quanto mais Sprints temos ao longo do processo Scrum, mais momentos de aprendizado vamos ter.

Incremento do produto
As Sprints permitem que o time de desenvolvimento entreguem um trabalho de alta qualidade de forma iterativa e incremental.

O objetivo da Sprint é que o time entregue uma parte do produto potencialmente utilizável e que possa ser plenamente avaliada pelo Product Owner e demais partes interessadas.

Por exemplo, se o objetivo do projeto é desenvolver um aplicativo de delivery de comida, essa entregue geral poderia ser divida em diferentes Sprints.

Em cada Sprint, vai ser entregue uma determinada funcionalidade do app. O importante é que a funcionada de cada entrega funcione, assim quem vai avaliar vai conseguir dar um feedback realmente construtivo para o time.

A cada final de Sprint, tanto o Product Owner quanto a clientela, vão poder dar um feedback que vai fazer com que a equipe de desenvolvimento melhore o produto. Isso permite que esse produto seja desenvolvido com uma participação ativa da pessoa usuária.

Desse modo, quando o produto for entregue no final do projeto, ele pode ter mais aceitação no mercado e gerar mais valor a pessoa usuária uma vez que for avaliado e aprimorado ao longo do processo do Scrum. Diferentemente de algumas empresas que desenvolvem o produto, colocam no mercado e só depois analisam a geração de valor e sua aceitação.

Essas empresas correm um alto risco, enquanto as empresas que utilizam Scrum vão desenvolver uma solução de forma incremental e interativa e, com isso, de menor risco ao ser lançada.

Essa participação ativa da pessoa usuária é muito importante, principalmente em empresas que colocam a clientela como foco e no centro do modelo de negócio. A opinião de quem vai usar o produto é valiosa, pois vamos conseguir entregar um produto que atende suas expectativas.

Essas pequenas partes que vão ser entregues a cada Sprint são consideradas um artefato Scrum chamado incremento do produto.

Uma dúvida bastante comum é se durante a Sprint, é obrigatório entregar apenas o incremento. Não, você pode reunir diferentes tipos de incremento para entregar ao final da Sprint. Nesses casos, o importante é sua equipe garantir que os incrementos estejam conectados e funcionais.

No exemplo do app de delivery de comida, a equipe poderia entregar em uma determinada Sprint uma interface detalhada, uma funcionalidade de pagamento do pedido e outra funcionalidade do menu de restaurante por tipo de comida. Durante essa entrega, tivemos três tipos de incrementos que fazem parte do produto final.

Mas, não adianta esses elementos não se conectarem. Afinal, essas entregas vão ser avaliadas pelo Product Owner e, muitas vezes, pela pessoa usuária ou alguém do negócio.

Definição de pronto
Todavia, como sabemos como o incremento está pronto para ser entregue ao final de uma Sprint? Cumprindo com o compromisso que cada incremento deve atender para ser considerado pronto.

O Scrum Guide chama de definição de pronto o critério que o time vai utilizar como base para poder classificar se um incremento está pronto ou não para ser apresentado no final de uma determinada Sprint.

Esses critérios vão definir quando algum item do Sprint Backlog está apto para ser apresentado para as pessoas que vão avaliá-lo.

Mais uma vez, a definição de pronto é customizada para cada projeto. Ou seja, cada equipe de desenvolvimento vai ter autonomia para definir seus próprios critérios que vão fazer com que entendam quando o incremento está pronto e apto para ser testado e avaliado ao final de cada Sprint.

Esses critérios devem ser claros e objetivos, além de estarem sempre acessíveis para cada integrante da equipe de desenvolvimento. Alguns exemplos de critério para a definição de pronto são:

As funcionalidades do item foram implementadas e testadas;
A usabilidade do item foi validada;
O item foi aprovado pelo Product Owner.
Cada tipo de solução vai ter uma determinada particularidade que, por sua vez, vai exigir determinados critérios mais técnicos para demonstrar quando um incremento está pronto para ser apresentado.

Note que esses critérios podem ser técnicos e específicos, bem como algo relacionado a própria qualidade do que vai ser entregue.

Por fim, a definição de pronto ajuda a garantir a qualidade do produto e daquilo que vai ser entregue ainda que em pequenas partes.

Se um determinado item da Sprint não for definido como pronto, ele não vai poder ser apresentado em uma Sprint Review ou para o Product Owner.

Daily Scrum
Ao longo do processo de projeto, o time Scrum se reúne diariamente no evento de Daily Scrum.

A Daily Scrum sempre ocorre durante as Sprints e tem uma duração de 15 minutos, onde a equipe se reúne para falar das tarefas que estão colocando em prática durante o seu trabalho.

É um bom momento para o time trocar experiências e entender como podem melhorar o seu processo de trabalho, remover barreiras ou impedimentos que acontecem naquele momento, além de fortalecer o espírito de equipe onde todos podem ajudar o próximo a melhor o seu trabalho.

A Daily Scrum também é importante já que se houver algo travando o desenvolvimento do incremento, os encontros diários ajudam o time a identificar esse travamento a tempo e fazer as mudanças necessárias. Com isso, evitam-se atrasos na Sprint.

Para diminuir a complexidade, a Daily Scrum é normalmente realizada no mesmo local e horário todo dia. Assim, as pessoas conseguem se programar e saber que aquele momento é reservado para a conversa com o time.

Esse tipo de momento evita que se tenha várias reuniões durante a Sprint para tratar de pontos específicos do projeto. Se todo dia o time se reúne para falar de forma geral sobre o que está acontecendo, aquele momento vai ser usado e evita a criação de vários compromissos que tiram o foco do trabalho de cada integrante do time.

Por fim, o objetivo da Daily Scrum é inspecionar o trabalho do time em direção à meta da Sprint, verificando se todos estão conseguindo trabalhar para atingir essa meta. A partir dessa inspeção o time pode até adaptar o Sprint Backlog conforme a necessidade.

Esse evento ajuda a comunicação e entrosamento do time, o que favorece também uma tomada de decisão mais rápida e maior proatividade de cada integrante.


---------------------------------------------------------------------------------------------------Sprint: Review e Retrospective

Sprint review
O primeiro evento que acontece após o final da sprint é a sprint review ou reunião de revisão da sprint. Seu principal objetivo é apresentar o produto entregue na sprint em questão, o "incremento".

A reunião costuma durar em torno de 4 horas, se consideramos uma sprint de um mês. No caso de sprints menores, talvez a duração também seja menor. Depende muito do contexto e tipo de projeto.

Na reunião de revisão da sprint, esperamos que o time Scrum apresente para os stakeholders (clientes, usuários, acionistas ou mesmo alguém do negócio) o incremento que é resultado da sprint em questão. Assim, os stakeholders poderão passar um feedback sobre o que foi entregue.

Na apresentação, podem ser demonstradas as funcionalidades de um produto, por exemplo, um produto digital, ou demais elementos, a depender do tipo de solução que está sendo desenvolvida.

Além do incremento, o time deve apresentar os objetivos estabelecidos para a sprint em questão e quais deles foram atendidos ou não. A partir disso, a audiência conseguirá passar um feedback sobre o incremento de produto, dar sugestões e alinhar as expectativas em relação aos próximos ciclos de trabalho, ou seja, as próximas sprints.

Algo bastante importante que deve acontecer ao final da reunião é que o product backlog precisa ser atualizado. A partir dos feedbacks, sugestões e alinhamentos de expectativas entre o time e os stakeholders, algumas tarefas listadas no product backlog podem não fazer mais sentido para as próximas sprints.

Se você for a pessoa product owner, talvez seja sua responsabilidade atualizar o product backlog.

Sprint Retrospective
Após a sprint review, acontece outro evento chamado sprint retrospective. Se trata de uma reunião com o objetivo de avaliar, de forma geral, o processo de trabalho do time Scrum.

Nesta reunião, o time discute o que foi feito na sprint e começa a tentar identificar melhorias para o que foi ruim. O Scrum guide orienta que, quando trabalhamos com uma sprint de um mês, a duração dessa reunião deve ser até 3 horas.

Neste encontro, o time deve discutir e analisar o que foi feito na última sprint e entender como foi a dinâmica de trabalho: o que funcionou, o que não funcionou e o que pode ser melhorado.

Além do processo de desenvolvimento do produto, analisa-se também as dinâmicas internas do time, por exemplo, a comunicação. Outro ponto importante discutido nesse tipo de evento é a identificação de obstáculos durante o processo de trabalho e exemplificação de como eles foram contornados.

Então, a equipe analisará o que deu muito certo, quais foram os grandes acertos e o que os ocasionou. Tudo isso é muito importante para que todas as pessoas aprendam e consigam implementar o que deu certo e tentar evitar o que deu errado.

Como resultado, a equipe produzirá uma lista com alguns itens que deverão, necessariamente, abordar nos próximos ciclos de trabalho para que o processo de trabalho melhore.

O Scrum guide destaca que a sprint retrospective é um evento essencial para colocar dois pilares do Scrum em ação: a inspeção e a adaptação. O motivo é que, nesse momento, o time tem uma grande oportunidade de parar, analisar o que foi feito e reformular seus processos.

Sprint Review vs Sprint Retrospective
Para que fique mais fácil identificar as principais diferenças entre as sprint review e a sprint retrospective, vamos analisar por partes cada um desses eventos.

Objetivos
Em relação aos objetivos, na sprint review, busca-se fazer uma revisão do produto/incremento e ter um feedback do que foi entregue. Já na sprint retrospective, o objetivo é a avaliação do processo de trabalho.

Isso não quer dizer que, por exemplo, em uma sprint retrospective, não surgirá algum assunto relacionado ao produto ou ao próprio processo de desenvolvimento do produto, mas, o objetivo final dessa reunião é avaliar o processo de trabalho e não o produto.

Pessoas
Sobre as pessoas que participam desses dois eventos, na sprint review, temos todo o time Scrum e Stakeholders, ou seja, todas as pessoas interessadas no projeto em questão. Já na sprint retrospective, somente o time Scrum participa.

Resultado
Quanto ao resultado esperado no final de cada um desses eventos, na sprint review, esperamos apenas um feedback sobre o produto. Já na sprint retrospective, a ideia é desenvolver um pano de ação, algo bem mais detalhado e direcionado, que fará com que o time consiga, de fato, melhorar suas práticas de trabalho.

Momento
Por fim, embora ambos aconteçam ao final da sprint, a sprint review vem primeiro, seguida da conclusão do trabalho do produto. Já a sprint retrospective, sempre vai acontecer após a review.

Conclusão
Em resumo, portanto, na review nos concentramos no feedback do produto. Já na retrospectiva, refletimos sobre os feedbacks do processo de trabalho. Os dois eventos são bastante importantes, pois permitem que a equipe Scrum consiga evoluir ao longo do projeto.

Acessando o Para saber mais: como conduzir uma Sprint Review e Para saber mais: Alura + Dicas para restrospectiva, você conseguirá estudar dois temas diferentes: um guia explicando de forma detalhada como conduzir uma sprint review e outro sobre como conduzir uma sprint retrospective.

Após a leitura desses materiais, com certeza, você conseguirá colocar a mão na massa e, junto ao seu time, implementar esses dois eventos do processo Scrum.

Concluímos a aula e já compreendemos os elementos centrais do Scrum, seus artefatos e eventos. Somando o conhecimento desta aula aos das aulas anteriores, com certeza, ficará muito mais fácil implementar o Scrum nos projetos. O primeiro passo é montar um time Scrum, afinal, as pessoas certas auxiliam e muito no desenvolvimento do projeto.


A reunião de revisão da sprint, também conhecida como Sprint Review, é uma oportunidade para a equipe Scrum refletir sobre o trabalho realizado na sprint anterior, compartilhar os resultados e receber feedback. É uma etapa muito importante no processo Scrum para promover a transparência e a colaboração entre os membros da equipe.

Confira, a seguir, um passo a passo descomplicado para conduzir esse evento Scrum.

Passo 1: Prepare a reunião

Antes de iniciar a reunião, é importante se preparar adequadamente. Certifique-se de que a equipe de desenvolvimento tenha concluído todas as tarefas planejadas para a sprint e esteja pronta para compartilhar os resultados com os demais membros do time Scrum. Além disso, no caso de um encontro presencial, verifique se a sala de reunião está reservada e os recursos técnicos, como projetor ou tela de apresentação, estão funcionando corretamente. No caso de um encontro on-line, verifique se as ferramentas de que irá precisar estão funcionando.

Passo 2: Convite aos participantes

Envie convites aos membros do time Scrum, que incluem o Scrum Master, o Product Owner e a equipe de desenvolvimento. Certifique-se de que todos estejam cientes da data, do horário e do local da reunião.

Passo 3: Inicie a reunião

Inicie a reunião de revisão da sprint no horário marcado. Comece com uma breve introdução, explicando o propósito da reunião e os objetivos a serem alcançados.

Passo 4: Demonstre as funcionalidades concluídas

A equipe de desenvolvimento deve mostrar as funcionalidades concluídas durante a sprint. Isso pode ser feito por meio de uma demonstração prática do software desenvolvido ou exibindo os resultados em uma apresentação de slides. Certifique-se de que todas as funcionalidades sejam apresentadas de forma clara e compreensível.

Passo 5: Receba feedback

Após a apresentação das funcionalidades concluídas, é hora de receber feedback dos participantes. O Product Owner e outros membros do time Scrum podem fazer perguntas, fornecer comentários e sugerir melhorias. É importante encorajar uma discussão construtiva e garantir que todas as preocupações sejam ouvidas.

Passo 6: Atualize o Product Backlog

Com base no feedback recebido, a pessoa Product Owner deve atualizar o Product Backlog, que é a lista de itens a serem desenvolvidos futuramente. Os itens que foram concluídos na sprint devem ser marcados como concluídos e removidos do Product Backlog, enquanto os novos itens identificados durante a revisão da sprint devem ser adicionados.

Passo 7: Encerre a reunião

Após a discussão e a atualização do Product Backlog, encerre a reunião de revisão da sprint. É importante garantir que todos os tópicos tenham sido abordados e que haja um entendimento claro das próximas etapas a serem tomadas.

Passo 8: Busque a melhoria contínua

Após a reunião, a equipe Scrum deve realizar uma retrospectiva da sprint para identificar oportunidades de melhoria e implementar ações corretivas na próxima sprint. Esse é um passo importante para garantir um aperfeiçoamento contínuo do processo Scrum.


https://cursos.alura.com.br/extra/alura-mais/dicas-para-retrospectivas-ageis-c1935

------------------------------------------------------------------------------------Gerenciando um time Scrum





Falhas no gerenciamento
Empresas que aderem o Scrum e não gerenciam bem a equipe acabam sofrendo com alguns contratempos.

Um exemplo é o baixo comprometimento, isso faz com que os profissionais nem sempre se esforcem em suas entregas. Além disso, um time que não está motivado pode acabar perdendo o foco do que realmente precisa ser feito, isso pode prejudicar todo o projeto.

Também pode ocorrer atrasos do cronograma caso o gestor não defina prazos e cronogramas com toda a equipe.

A falta de clareza e prioridades também é um problema que pode surgir. É muito importante que toda a equipe esteja integrada aos objetivos do projeto.

Além disso, todos esses problemas também podem causar desperdício de tempo e de recursos, seja financeiro, material ou intelectual.

Como gerenciar um time Scrum
O primeiro passo é deixar evidente e acessível os propósitos e objetivos do projeto. Todos os profissionais envolvidos precisam saber o que e como essa solução será aplicada. Assim os profissionais poderão se dedicar e colaborar a alcançar esses objetivos.

Saber definir papéis e responsabilidades também é essencial. A liderança precisa avaliar os profissionais e entender quais se encaixam em determinadas funções. Isso também deve acontecer na definição e delegação de tarefas que acontecem nas sprints.

Um bom gerenciamento também envolve uma boa comunicação, afinal, o time Scrum é composto por várias pessoas que precisam se comunicar para estarem alinhadas. É importante que a liderança dê esse suporte.

Ao cumprir esses critérios é possível ter uma equipe engajada e capaz de desenvolver soluções de forma ágil. Porém, além de gerenciar é essencial saber como montar um time Scrum.

Como montar um time Scrum
Para montar um time Scrum do início você pode seguir um passo a passo.

1- Escolha dos membros

Geralmente times menores são mais produtivos que maiores, por isso, um dos critérios para a montagem do time é uma equipe enxuta.

Também é importante que os profissionais sejam multifuncionais, ou seja, tenham formações diferentes e habilidades que se complementem.

Além disso, também é necessário que sejam colaborativas e comprometidas, só assim será possível atingir os objetivos do projeto.

2- Definição dos papéis

Na etapa de definição dos papéis, primeiro é preciso escolher alguém para o cargo de Product Owner. É necessário que seja uma pessoa profissional com amplo conhecimento do negócio, produto e cliente.

Como uma das responsabilidades é a intermediação com todas as pessoas do time, essa escolha deve ser feita de forma estratégica.

O segundo passo é a definição da pessoa Scrum Master, que deve ter um perfil comunicativo e gerencial. Isso porque uma das suas responsabilidades será transitar entre os membros e identificar se o Scrum está sendo aplicado de forma correta.

Isso significa que esse profissional precisa ter um amplo conhecimento do Framework, seus pilares, valores e regras, além de saber como conduzir todos os eventos.

O Scrum Master também é a pessoa responsável por identificar e resolver problemas que podem surgir no desenvolvimento do projeto. Para isso, é necessário que tenha proatividade e interação com o time.

O restante das pessoas vão compor o Development Team, o time de desenvolvimento. Para essa posição é necessário buscar por pessoas que tenham conhecimentos e habilidades relevantes e relacionadas a solução que está sendo desenvolvida.

Imagine que você precisa reformular alguns processos de recrutamento de colaboradores. Para isso, você decide criar um projeto utilizando o Scrum.

Nesse caso, o time de desenvolvimento teria que ser pessoas internas ou externas que entendam de processos e recursos humanos.

Pensar dessa forma auxilia na escolha estratégica do time e consequentemente para o cumprimento dos objetivos.

Além desses critérios, é preciso garantir que o time utilize o Framework. Isso significa que essas pessoas precisam ter uma mentalidade em comum.

Características do time Scrum
Vamos conhecer algumas características essenciais que o time deve ter para o desenvolvimento de um projeto eficiente.

Autonomia

O Scrum sempre irá orientar que o time tenha autonomia e consiga se autogerenciar, ou seja, tralhar de forma independente, porém seguindo o mesmo objetivo em comum. Para isso é importante que haja suporte do Scrum Master.

Priorização

As pessoas escolhidas para o time precisam considerar que o projeto deve conter apenas o que realmente gera valor para o cliente. É preciso evitar o que o usuário não utilizará e focar no que irá agregar.

Colaboração

A colaboração é muito importante para manter a união do time e para que juntos possam desenvolver e colocar em prática a solução proposta.

Antes de cobrar a colaboração do time é preciso compreender se a empresa está oferecendo suporte para que isso aconteça. Isso inclui tanto a disponibilização de um espaço físico para encontros, por exemplo, como materiais específicos. A pessoa responsável por esse suporte é o Scrum Master.

Transparência

Os membros do time devem ser transparentes em relação a todo processo de trabalho. É necessário um ambiente no qual as pessoas se sintam confortáveis para expor suas ideias, opiniões e dar feedbacks.

É comum que as empresas não estimulem a transparência entre a equipe. Isso porque às vezes os colaboradores estão acostumados com uma cultura na qual esse tipo de comportamento, como o feedback, é considerado algo negativo.

No Scrum isso não deve acontecer, é muito importante que a transparência seja estimulada e faça parte do dia a dia. Quem deve se atentar a isso é a pessoa Product owner, responsável por saber tudo sobre o projeto.

Adaptabilidade

Como o Scrum faz parte das metodologias ágeis é preciso ter adaptabilidade. Isso significa que nada é estático, mudanças acontecem e são necessárias.

Por isso é essencial não se apegar em ideias e processos, afinal, podem mudar. É necessário que os profissionais sejam flexíveis a essas mudanças tanto do projeto quanto para o nicho no qual a empresa se encaixa. Empresas de tecnologia, por exemplo, mudam a todo momento.

Comunicação

A comunicação além de essencial, está relacionada a colaboração. O time precisa ser comunicativo para desenvolver um projeto de sucesso.

O Scrum possui alguns eventos que facilitam e estimulam a comunicação de todo o time, como a Sprint review, a Retrospectiva e a Daily scrum.

Orientação a resultados

Todo time precisa estar alinhado as expectativas do cliente, ou seja, do que precisa ser entregue. Como o Scrum é cíclico, é importante que ao longo desse processo de trabalho a equipe tenha foco para o cumprimento dos objetivos.

Gerenciar um time Scrum pode parecer desafiador, mas com as práticas corretas e o compromisso da equipe você pode ter muito sucesso.

Por isso, todos os temas que aprendemos anteriormente são muito importantes de serem incentivados constantemente pela liderança.

Com todo o conhecimento adquirido nesse curso, você poderá começar um projeto utilizando o Scrum de forma muito mais fácil.













